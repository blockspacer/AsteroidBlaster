package ast;

message Vector {
   required double x = 1;
   required double y = 2;
   required double z = 3;
}

// All items will live in this type.
message Entity {
   // All items must have id and type.
   optional uint32 id = 1;
   optional uint32 type = 2;

   // Probably all items will have pos/vel.
   optional Vector position = 3;
   optional Vector velocity = 4;

   // Some items have a radius etc.
   optional float radius = 19;
   optional Vector axis = 21;
   optional float angle = 25;
   optional float rotationSpeed = 26;

   // Mostly for the ship
   optional Vector up = 22;
   optional Vector right = 23;
   optional Vector forward = 24;
   optional float targetYawSpeed = 27;
   optional float targetPitchSpeed = 28;
   optional float targetRollSpeed = 29;

   // Ship + Asteroid
   optional float health = 30;
   optional float healthMax = 31;

   // Just the ship
   optional int32 engineLevel = 32;
   optional int32 regenHealthLevel = 33;
   optional int32 bankLevel = 34;
   optional float color1 = 35;
   optional float color2 = 36;
   optional Vector shotDirection = 37;
   optional bool isFiring = 38;
   optional int32 currentWeapon = 39;
   optional float isBarrelRollingLeft = 40;
   optional float isBarrelRollingRight = 41;
   optional float curForwardAccel = 42;
   optional float curRightAccel = 43;
   optional float curUpAccel = 44;
   optional bool isBraking = 45;
   optional float bankPeriod = 46;

   // Should we include weapons?
}

// Just a timestamp and an entity list.
message GameState {
   optional uint32 playerShip = 3;
   required double curTime = 2;
   repeated Entity entity = 1;
}

message CollisionMessage {
   optional uint32 messageid = 4;
   optional double timestamp = 1;
   optional uint32 objectId1 = 2;
   optional uint32 objectId2 = 3;
}

message ChatMessage {
   optional uint32 sourceid = 1;
   optional string text = 2;
}

message CreateEntityMessage {
   optional uint32 createEntityMessageid = 1;
   // Should this be optional instead?
   repeated Entity entity = 2;
}

message ServerToClient {
   optional uint64 seq = 3;
   optional uint64 ack = 4;
   optional double timestamp = 5;
   optional GameState gameState = 17;
   repeated CollisionMessage collisionMessage = 1;
   repeated ChatMessage chatMessage = 2;

}
